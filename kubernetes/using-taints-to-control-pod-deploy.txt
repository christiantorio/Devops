#Use taints to manage where Pods are deployed or allowed to run. In addition to assigning a Pod to a group of nodes, you may also want to limit usage on a node or fully evacuate Pods. Using taints is one way to achieve this. You may remember that the master node begins with a NoSchedule taint. We will work with three taints to limit or remove running pods.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: taint-deployment
spec:
  replicas: 8
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.16.1
        ports:
        - containerPort: 80

#using taint to affect deployment of new containers. there are 3: NoSchedule, PreferNoSchedule, NoExecute

#The taints having to do with schedules will be used to determine newly deployed
containers, but will not affect running containers. The use of NoExecute will cause running containers to move. Taint the secondary node, verify it has the taint then create the deployment again. We will use the key of bubba to illustrate the key name is just some string an admin can use to track Pods.

$ kubectl taint nodes ip-172-31-14-194 bubba=value:PreferNoSchedule
$ kubectl describe node |grep Taint

#removing taint. Note that the key is used with a minus sign appended to the end

$ kubectl taint nodes lfs458-worker bubba


